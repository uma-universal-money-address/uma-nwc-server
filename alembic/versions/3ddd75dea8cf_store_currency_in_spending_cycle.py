"""store currency in spending_cycle

Revision ID: 3ddd75dea8cf
Revises: c08737942f7a
Create Date: 2024-09-26 19:55:29.381422

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op
from nwc_backend.db import DBCurrency

# revision identifiers, used by Alembic.
revision: str = "3ddd75dea8cf"
down_revision: Union[str, None] = "c08737942f7a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    usd = '{"code": "USD", "symbol": "$", "name": "US Dollar", "decimals": 2}'
    sat = '{"code": "SAT", "symbol": "", "name": "Satoshi", "decimals": 0}'

    with op.batch_alter_table("spending_cycle", schema=None) as batch_op:
        batch_op.alter_column(
            "limit_currency",
            existing_type=sa.VARCHAR(length=3),
            type_=sa.VARCHAR(length=100),
            existing_nullable=False,
        )

    if op.get_bind().engine.name == "sqlite":
        op.execute(
            f"UPDATE spending_cycle set limit_currency='{usd}' where limit_currency='USD';"
        )
        op.execute(
            f"UPDATE spending_cycle set limit_currency='{sat}' where limit_currency='SAT';"
        )
    else:
        op.execute(
            f"UPDATE spending_cycle set limit_currency='{usd}'::json where limit_currency='USD';"
        )
        op.execute(
            f"UPDATE spending_cycle set limit_currency='{sat}'::json where limit_currency='SAT';"
        )

    with op.batch_alter_table("spending_cycle", schema=None) as batch_op:
        batch_op.alter_column(
            "limit_currency",
            existing_type=sa.VARCHAR(length=100),
            type_=DBCurrency(),
            existing_nullable=False,
            postgresql_using="limit_currency::jsonb",
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("spending_cycle", schema=None) as batch_op:
        batch_op.alter_column(
            "limit_currency",
            existing_type=DBCurrency(),
            type_=sa.VARCHAR(length=100),
            existing_nullable=False,
        )
    op.execute(
        "UPDATE spending_cycle set limit_currency='USD' where limit_currency LIKE '%USD%';"
    )
    op.execute(
        "UPDATE spending_cycle set limit_currency='SAT' where limit_currency LIKE '%SAT%';"
    )
    with op.batch_alter_table("spending_cycle", schema=None) as batch_op:
        batch_op.alter_column(
            "limit_currency",
            existing_type=sa.VARCHAR(length=100),
            type_=sa.VARCHAR(length=3),
            existing_nullable=False,
        )
    # ### end Alembic commands ###
