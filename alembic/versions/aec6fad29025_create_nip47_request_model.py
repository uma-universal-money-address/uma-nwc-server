"""create nip47_request model

Revision ID: aec6fad29025
Revises: 4ede705c5288
Create Date: 2024-08-07 11:15:48.619620

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects.postgresql.json import JSONB

from alembic import op
from nwc_backend.db import UUID

# revision identifiers, used by Alembic.
revision: str = "aec6fad29025"
down_revision: Union[str, None] = "4ede705c5288"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "nip47_request",
        sa.Column("app_connection_id", UUID(), nullable=False),
        sa.Column("event_id", sa.String(length=255), nullable=False),
        sa.Column(
            "method",
            sa.Enum(
                "PAY_INVOICE",
                "MAKE_INVOICE",
                "LOOKUP_INVOICE",
                "GET_BALANCE",
                "GET_INFO",
                "LIST_TRANSACTIONS",
                "PAY_KEYSEND",
                "LOOKUP_USER",
                "FETCH_QUOTE",
                "EXECUTE_QUOTE",
                "PAY_TO_ADDRESS",
                name="nip47requestmethod",
                native_enum=False,
            ),
            nullable=False,
        ),
        sa.Column(
            "params",
            sa.JSON().with_variant(JSONB(astext_type=sa.Text()), "postgresql"),
            nullable=True,
        ),
        sa.Column("response_event_id", sa.String(length=255), nullable=True),
        sa.Column(
            "response_result",
            sa.JSON().with_variant(JSONB(astext_type=sa.Text()), "postgresql"),
            nullable=True,
        ),
        sa.Column(
            "response_error_code",
            sa.Enum(
                "RATE_LIMITED",
                "NOT_IMPLEMENTED",
                "INSUFFICIENT_BALANCE",
                "PAYMENT_FAILED",
                "NOT_FOUND",
                "QUOTA_EXCEEDED",
                "RESTRICTED",
                "UNAUTHORIZED",
                "INTERNAL",
                "OTHER",
                name="errorcode",
                native_enum=False,
            ),
            nullable=True,
        ),
        sa.Column("id", UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["app_connection_id"],
            ["app_connection.id"],
            name="nip47_request_app_connection_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("nip47_request")
    # ### end Alembic commands ###
